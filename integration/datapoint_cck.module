<?php
// $Id$

/**
 * Implementation of hook_datapoint_managed_fields_alter().
 *
 * @param $fields
 * @param $type node type
 * @return void
 */
function datapoint_cck_datapoint_managed_fields_alter(&$fields, $type) {
  $cck_fields = content_fields();
  foreach ($cck_fields as $field_name => $field) {

    if ($field['type_name'] == $type->type) {
      $setter = _datapoint_cck_setters($field['type']);

      if (!$setter) {
        continue;
      }

      $field_basic_setting = array(
        'field_name' => $field_name,
        'label' => $field['widget']['label'],
        'required' => $field['required'],
        'setter' => $setter,
      );

      //If the field typ is an event, and the field is start and end time
      if ($field['type_name'] == 'event' && $field['field_name'] == 'field_time') {
        //Create field for start and end time
        $fields['cck_' . $field_name . '_start'] = $field_basic_setting + array(
          'label' => t('!label - start time', array('!label' => $field['widget']['label']))
        );
        $fields['cck_' . $field_name . '_end'] = $field_basic_setting + array(
          'label' => t('!label - end time', array('!label' => $field['widget']['label'])),
        );
      }
      //If not, continue as usual
      else {
        $fields['cck_' . $field_name] = $field_basic_setting;
      }
    }
  }
}

function _datapoint_cck_setters($type) {
  switch ($type) {
    case 'text':
      return '_datapoint_cck_set_text';
    break;
    case 'number_integer':
      return '_datapoint_cck_set_integer';
    break;
    case 'number_float':
      return '_datapoint_cck_set_float';
    break;
    case 'datestamp':
      return '_datapoint_cck_set_datestamp';
    break;
  }
}

function _datapoint_cck_set_text(&$node, $field, $setter, $value) {
  $field_name = $setter['field_name'];
  $node->$field_name = array(array('value' => $value));
}

function _datapoint_cck_set_integer(&$node, $field, $setter, $value) {
  $field_name = $setter['field_name'];
  $node->$field_name = array(array('value' => intval($value)));
}

function _datapoint_cck_set_float(&$node, $field, $setter, $value) {
  $field_name = $setter['field_name'];
  $node->$field_name = array(array('value' => floatval($value)));
}

function _datapoint_cck_set_datestamp(&$node, $field, $setter, $value) {
  $field_name = $setter['field_name'];

  //Check if it's the endtime for an event
  if ($field['source'] == 'vertex_schema_dtend') {
    //Save the starttime that has been set earlier, and merge the to values into one array
    $value_start = $node->$field_name;
    $value_end = array('value2' => $value);
    $value = array_merge($value_start[0], $value_end);
    $node->$field_name = array($value);
  }
  else {
    $node->$field_name = array(array('value' => $value));
  }
}